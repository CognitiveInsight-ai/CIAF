[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ciaf"
version = "0.1.0"
description = "Cognitive Insight AI Framework (CIAF) - A modular framework for verifiable AI with provenance tracking."
readme = "README.md"
license = "MIT"
authors = [
    {name = "CIAF Development Team", email = "Founder@CognitiveInsight.AI"}
]
maintainers = [
    {name = "CIAF Development Team", email = "Founder@CognitiveInsight.AI"}
]
keywords = [
    "ciaf",
    "cognitive", 
    "insight",
    "ai",
    "artificial-intelligence",
    "framework",
    "provenance",
    "transparency",
    "cryptography"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security :: Cryptography",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "cryptography>=3.4",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "msgpack>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
web = [
    "flask>=2.3.0",
    "plotly>=5.15.0",
]
viz = [
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

[project.urls]
Homepage = "https://github.com/CognitiveInsight-ai/CIAF"
Repository = "https://github.com/CognitiveInsight-ai/CIAF"
Documentation = "https://github.com/CognitiveInsight-ai/CIAF#readme"
"Bug Tracker" = "https://github.com/CognitiveInsight-ai/CIAF/issues"

[project.scripts]
ciaf-compliance-report = "ciaf.cli:compliance_report_cli"
ciaf-setup-metadata = "ciaf.cli:setup_metadata_cli"

[project.entry-points."ciaf.frameworks"]
eu_ai_act = "ciaf.compliance.frameworks:EUAIActFramework"
nist_ai_rmf = "ciaf.compliance.frameworks:NISTAIRMFFramework"
gdpr = "ciaf.compliance.frameworks:GDPRFramework"

[tool.setuptools]
packages = {find = {}}
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "templates/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | temp_cleanup
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=ciaf --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["temp_cleanup/", "build/", "dist/"]
